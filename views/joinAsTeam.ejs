<!-- views/joinAsTeam.ejs -->

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Join as Team</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">
</head>

<body class="bg-gray-100 p-8">
  <div class="mt-8 flex justify-end">
    <!-- Sign Out Button -->
    <form action="/logout" method="post">
      <button class="bg-red-500 text-white py-2 px-4 rounded">Sign Out</button>
    </form>
  </div>

  <div class="mt-8 max-w-lg mx-auto bg-white rounded-lg shadow-md p-8">
    <% if (eventData) { %>
      <h1 class="text-2xl font-bold mb-6"><%= eventData.eventName %></h1>
      <h3 class="text-2xl font-bold mb-6"><%= eventData.date %></h3>
      <p class="text-gray-600 mb-4">Max Team Size: <%= eventData.maxSize %></p>
      <p class="text-gray-600 mb-4">Description: <%= eventData.description %></p>

      <% if (errors && errors.length > 0) { %>
        <div class="mb-4 text-red-500">
          <p>Validation Errors:</p>
          <ul>
            <% errors.forEach(error => { %>
              <li><%= error.message %></li>
            <% }); %>
          </ul>
        </div>
      <% } %>
      <% } else { %>
        <p>No event details available</p>
      <% } %>
    <h2 class="text-2xl font-semibold mb-6">Join as Team</h2>
    <form action="/submitTeam" method="post">
      <div class="mb-6">
        <!-- Inside your form in joinAsTeam.ejs -->
        <input name="eventId" value="<%= eventData.id %>" id="eventId">
        <label for="teamName" class="block text-sm font-medium text-gray-700 mb-2">Team Name:</label>
        <input type="text" id="teamName" name="teamName" class="w-full border rounded-md px-4 py-2">
      </div>
      <div class="mb-6">
        <label for="teamSize" class="block text-sm font-medium text-gray-700 mb-2">Team Size:</label>
        <select id="teamSize" name="teamSize" class="w-full border rounded-md px-4 py-2">
          <% for (let i = 2; i <= maxTeamSize; i++) { %>
            <option value="<%= i %>"><%= i %></option>
          <% } %>
        </select>
      </div>

      <div id="members-container" class="space-y-4"></div>

      <button type="submit" class="mt-6 bg-green-500 text-white py-2 px-4 rounded hover:bg-green-600 transition-colors">Submit Team</button>
    </form>
  </div>

  <script>
    // Immediately invoked function to set initial state
    (function() {
      const defaultTeamSize = 0;
      const teamSizeSelect = document.getElementById('teamSize');
      teamSizeSelect.value = defaultTeamSize; // Set default value

      // Generate input fields based on default team size
      generateInputFields(defaultTeamSize);
    })();

    document.getElementById('teamSize').addEventListener('change', function() {
      const selectedSize = parseInt(this.value);
      generateInputFields(selectedSize);
    });

    function generateInputFields(size) {
      const membersContainer = document.getElementById('members-container');
      membersContainer.innerHTML = '';

      for (let i = 0; i < size; i++) {
        const memberDiv = document.createElement('div');
        memberDiv.classList.add('bg-gray-100', 'rounded-md', 'p-4');

        const memberNameInput = createInput('text', `memberNames[${i}]`, 'Member Name');
        const memberEmailInput = createInput('email', `memberEmails[${i}]`, 'Member Email');
        const memberPhoneInput = createInput('tel', `memberPhones[${i}]`, 'Member Phone');

        memberDiv.appendChild(memberNameInput);
        memberDiv.appendChild(memberEmailInput);
        memberDiv.appendChild(memberPhoneInput);

        membersContainer.appendChild(memberDiv);
      }
    }

    function createInput(type, name, label) {
      const div = document.createElement('div');

      const labelElement = document.createElement('label');
      labelElement.setAttribute('for', name);
      labelElement.classList.add('block', 'text-sm', 'font-medium', 'text-gray-700', 'mb-1');
      labelElement.textContent = label;

      const inputElement = document.createElement('input');
      inputElement.setAttribute('type', type);
      inputElement.setAttribute('name', name);
      inputElement.classList.add('w-full', 'border', 'rounded-md', 'px-4', 'py-2', 'focus:outline-none', 'focus:border-blue-500');

      div.appendChild(labelElement);
      div.appendChild(inputElement);

      return div;
    }
  </script>
  
</body>

</html>
